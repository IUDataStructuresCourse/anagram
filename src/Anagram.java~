import java.util.ArrayList;
import java.util.Arrays;

public class Anagram {
	
	// Version 1, for each letter in s1, find match in s2 that is not already used,
	//   then check that all the letters in s2 were used.
	// Version 1 is O(n^2)
	public static boolean anagram_v1(String s1, String s2) {
		boolean[] used = new boolean[s2.length()];
		
		for (int i = 0; i != s1.length(); ++i) {
			if (s1.charAt(i) == ' ') continue;
			boolean found_match = false;
			for (int j = 0; j != s2.length(); ++j) {
				if (s2.charAt(j) == ' ') continue;
				if (used[j] == false && s1.charAt(i) == s2.charAt(j)) {
					used[j] = true;
					found_match = true;
					break;
				}
			}
			if (found_match == false)
				return false;
		}
		for (int j = 0; j != s2.length(); ++j)
			if (used[j] == false)
				return false;
		return true;
	}

	// Version 2 counts the number of occurrences of each letter.
	// Version 2 is O(n)
	
	public static void count(String s, int[] occurrences) {
		for (int i = 0; i != s.length(); ++i)
			if (s.charAt(i) != ' ')
				++occurrences[(int) s.charAt(i)];
	}
	public static boolean anagram_v2(String s1, String s2) {
		int[] occurrences1 = new int[128];
		int[] occurrences2 = new int[128];
		count(s1, occurrences1);
		count(s2, occurrences2);
		return Arrays.equals(occurrences1, occurrences2);
	}
	
	// Version 3 sorts both and compares them.
	// Version 3 is O(n lg n)
	
	public static void copy_without_spaces(String s, ArrayList<Character> c) {
		for (int i = 0; i != s.length(); ++i)
			if (s.charAt(i) != ' ')
				c.add(s.charAt(i));
	}
	public static boolean anagram_v3(String s1, String s2) {
		ArrayList<Character> c1 = new ArrayList<Character>();
		ArrayList<Character> c2 = new ArrayList<Character>();
		copy_without_spaces(s1, c1);
		copy_without_spaces(s2, c2);
		c1.sort(null);
		c2.sort(null);
		return c1.equals(c2);
	}



}
